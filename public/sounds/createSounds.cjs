// Using base64 encoded simple sounds to avoid external dependencies
const fs = require('fs');

// Simple success sound (a short blip)
const successSoundBase64 = 'SUQzAwAAAAAAI1RJVDIAAAAZAAAAaG93bGVyLmpzIHNvdW5kIGxpYnJhcnkAVERSQwAAAAUAAAAyMDEwAFRZRVIAAAAFAAAAMjAxMAAAAAAA//uQwAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAABAAADQgD///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AAAA5TEFNRTMuMTAwAZUAAAAAAAAAABSAJAJAQgAAgAAAA0L2YLYxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQwAADxIIBH9MAACN4CDH8zgAAEWmhoZ0TCdGITY5UcRExwYV0Y1uhbXt0PC3HwTg3ODF0ZreVs7yiYDgAAoGijrYxGXEZcRlZyNkIpA2KA0pxpoUfLMZZZZZZZ5jS3/4wwwz/lyw5TUZbUccPxifh9CgXHSm37rlgZCL6DX//5jYxxxyDELUu/4mNicQHwfBQRhQYIQhOD6ECRyHIQhOUiULzhCDuB8+hCEGCNB///84QhCDg2J5CEITd1g2IMTyEHCDE4AAAARZTqf1Mao76qczmO4eWU7jDuppq26rciMiIiIiIiIiIiIiIjT06HM4VVVTmcK7u7ndzu93d4QQQQQQQQQQQQQQQdxO4ncSIIIIIIIIIIQQQQQxMAAAAAAAACBNkSZEkwAAAAAAAAAJkiTJEmSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+5DAAAMYiCMT2cgAI5cEYntnAASIQEAUASAoD4TwmE8LhJEwGAgCQLBYKAeBwLhYIYkAwLBJCQkAYDAQEgLBIEAJj+CwVBcKAvDgGBQJAeFQiBMEwZHw/KAkCgLAeEQiBAJh+GwVCALg0EBuVBUFw6GiIEwXDsqCoXKw4OioLBAlDoaDhSFwVBQoCQIhMfj4qCIhHJUFQ2PB8VhEJlIlFBEPj4blAXCoeHZQHQ0Gh4UDUfDoqH5UFh6UHh+VBEQCoTj8tCoKgsfFIRCYgAMCwiEw6Kh+VBYfFQVDooCoKgqCo8KAqC4KhIJESiERCakIREQjI+HhQFQXDoqCo9KgsMRbYpUoZKoZKpsoqUQidaFFXS9anSR0kdJnSZ1MWJWFo5lc6aOo2p8oq9DP9FbUWmVYqnFRdNzZRWyhsozY4v4sQB+EyRPDJL56PH/iKhCWAYiPkGCkiYGAKgYCZ5IkxaaTFzBcjGjAYSMBMzI2hODFTdLPX/K3/1f/zPVf//b/+5DAMQMaVCMb2cAAI0cEYns4ABX//V///9X////+r////1f//////+bqjf/qjOt9a1rWta1rWtUtauta1rStRUta0ta0S1qprWhLWiWtFLWiWtay1olrWta1lrUVrRLWo3/R//oysa8SdrGLtJ8SdpPOn0n5J2k/JPOVqep6Jf+iW9S1olrWta0S1qK1olrRLWta1rWta1rRLWta1FLWta0Vf/+Z/+Z6Xta1rWta1qK1olrWta1qK1olrRV//V/+qN1rWta1rWta1rWtdcAZAJ5v9g1mvpD4uJAKMZkTZbUAmFoYAIAQxlQMDMSYRFXHPMhRkBcXGAYJkwREw4IH9QvUKC1UlqgM01f+9f+n/RctR26//1f/Y99A/j3vS9LW/S1ptVavTalqtUbXa1t92t9Kt67NjlPupVKtb2bGOc5znOVKpVretfpetalqWtbVQqlUqta1tVra1tbWta1rWta2tralra1ta2talqWpbWta2ptf//21rWtalqPfd/rWta1+6lUta1tdbWta1rWs+rWta1ra1ta1rWtq1rWta1rWtralqWta1ralra1ta1rWtQqlUqlZ99/oFAoFCvUqlW2rWta3/rWta1rWv/UqlWtqgUCoV6tb0CoK9QqlXWtdXWvrX1tb2tb1tb2vrVra0//b1/a1vXtrW3//t61tWta1rW/a1rWta1rWt+1va3r//uQwFkDGVgjE9nIACNvBGK7OQAdv99ra1ra1ta1va3rfta3r//7evrf/tre+tr//8//9r//+3retra2ta1rWtb1lSqVSrfrXLrA3XGaxdQz6qRnA0xmYqRmfUZn1FQLADAYDYIFZyJxMshmYmgZnw6JnQNpmQSZsJAZuFCZoCkZi+YNgcBPCdFQKikrIoIsYDAqiwKBmJKMFdwcHLSmMr1SZvrjhY4YJijhADGDZYYMUmWDZaQCJTCRwCQUSHXCYMqCCwpmlgRMYmjDRBcHJg4YMBCiySFBgYQMHGjADm8cLhC/LMXdjgyU9RgJzRJMaQJbdOCkrO0mTlgw+qEi1UKwFFmLYkstVB0tVB0tFYtVrRaVi1BagtFWtKxYsWLFixZBYsWQNrRYsWLYsWrRgFsFoLFq1aLFixasgsWLFiyCxYsWLFiyCxatWwWLFiyCxYsWLFkFixYsgsWrVq0FixYsWLFsFiyCxarWLFsCxYsWLIDWixZJKTrY0J1KFslXLJVyoFQKgVCcqlUp1Un1J9SfVSfUn1J9ORKlUlyXLFcqlUqlYFKlVBYsK9S5VKpVBXqXLFUFipfDEZiMRmIxGIjEYiMRiIxGYjEZLjMRiMRiMRiMliMRiMRiMRksliyXLJZLlkuXLJcuXLly5cuXLly5cuXLly5cuXLJYsliYiIyMjIyMjIyIyIyIyIiMjIiIiMiIiIiIiIiMRERERERERERERERERERERV';

// Simple hit/click sound
const hitSoundBase64 = 'SUQzAwAAAAAAI1RJVDIAAAAZAAAAaG93bGVyLmpzIHNvdW5kIGxpYnJhcnkAVERSQwAAAAUAAAAyMDIxAFRZRVIAAAAFAAAAMjAyMQAAAAAA/+M4wAAAAAAAAAAAAAAAAAAAAABJbmZvAAAADwAAAAIAAAGAAEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbY+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+29vb29vb29vb29vb29vb29vb29vb29vb2//////////////////////////////////////////////8AAAAATGF2YzU4LjEzAAAAAAAAAAAAAAAAJAZFgAAAAAAAAYD0VnO2AAAAAAAAAAAAAAAAAAAA/+MYxAAAAANIAAAAAExBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV/+MYxDsAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV/+MYxHYAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';

// Create a simple background music sound
const backgroundMusicBase64 = 'SUQzAwAAAAAAI1RJVDIAAAAZAAAAaG93bGVyLmpzIHNvdW5kIGxpYnJhcnkAVERSQwAAAAUAAAAyMDEwAFRZRVIAAAAFAAAAMjAxMAAAAAAA//uQwAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAACAAAEsACoqKioqKioqKioqKioqKioqKioqKioqKi3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3////////////////////////////////////////////////////////////////AAAA5TEFNRTMuMTAwBK8AAAAAAAAAABSAJAJAQgAAgAAAqAixhbUTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQwAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAAEsACUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nz///////////////////////////////////////////8AAAA5TEFNRTMuMTAwBK8AAAAAAAAAADkgJAJAQgAAgAAAqAixhbUTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//tQxAAADrTpTbmMgAI/HGf3PS4ASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+xDE54P9FLk5/YwAADaXJz+xkAA';

// Convert base64 to file
const convertBase64ToFile = (base64, outputPath) => {
  fs.writeFileSync(outputPath, Buffer.from(base64, 'base64'));
  console.log(`Created file: ${outputPath}`);
};

// Create files
try {
  convertBase64ToFile(successSoundBase64, 'success.mp3');
  convertBase64ToFile(hitSoundBase64, 'hit.mp3');
  convertBase64ToFile(backgroundMusicBase64, 'background.mp3');
  console.log('All sound files created successfully!');
} catch (err) {
  console.error('Error creating sound files:', err);
}